import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as p,c,a as s,d as a,e,b as l}from"./app-D1MQ9M-Q.js";const i={},d=l(`<h1 id="babel预设和插件介绍" tabindex="-1"><a class="header-anchor" href="#babel预设和插件介绍"><span>babel预设和插件介绍</span></a></h1><h2 id="babel-preset-env" tabindex="-1"><a class="header-anchor" href="#babel-preset-env"><span><code>@babel/preset-env</code></span></a></h2><p><code>@babel/preset-env</code>是一个智能的<code>babel</code>预设, 让你能使用最新的<code>JavaScript</code>语法, 它会帮你转换成代码的目标运行环境支持的语法, 提升你的开发效率并让打包后的代码体积更小,但是不会转换新增的方法,比如: <code>Object.is(), Array.from()</code>...</p><h4 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> i @babel/preset-env --save-dev
<span class="token comment"># or</span>
<span class="token function">yarn</span> <span class="token function">add</span> @babel/preset-env <span class="token parameter variable">--dev</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="运行机制" tabindex="-1"><a class="header-anchor" href="#运行机制"><span>运行机制</span></a></h4><p><code>@babel/preset-env</code>依赖了一些优秀的开源项目, 如<code>browserslist</code>, <code>compat-table</code>, <code>electron-to-chromium</code>...</p><p>利用这些数据源维护和增强<code>Babel</code>语法转换、语法实现, 来支持对应的目标环境的版本的语法、特征.</p><p>@babel/preset-env<code>利用你指定的任何目标环境, 检查它们对应的插件并传给</code>Babel</p><blockquote><p>注意<code>@babel/preset-env</code>不支持<code>stage-x</code>的插件</p></blockquote><p>对于浏览器或<code>Electron</code>的项目,推荐使用一个<code>.browserslistrc</code>文件指定编译目标,因为它可以被其他前端工程化生态的工具用到,比如:<code>autoprefixer</code>,<code>styleline</code>,<code>eslint-plugin-compat</code>...</p><p>如果没有配置<code>targets</code>或者<code>ignoreBrowserslistConfig</code>, <code>@babel/preset-env</code>将使用默认的<code>Browserslist</code>配置,将es6语法装换成es5语法.</p><p>如果你想支持市场份额大于0.25%而且忽略安全更新的浏览器如<code>IE 10</code>和<code>BlackBerry</code>的语法转换和语法实现, 你可以采用如下的配置</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;presets&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">[</span>
      <span class="token string">&quot;@babel/preset-env&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;useBuiltIns&quot;</span><span class="token operator">:</span> <span class="token string">&quot;entry&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;corejs&quot;</span><span class="token operator">:</span> <span class="token string">&quot;3.22&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>.browserlistrc</p><div class="language-txt line-numbers-mode" data-ext="txt" data-title="txt"><pre class="language-txt"><code>&gt; 0.25%
not dead
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>或者你可以在<code>package.json</code>文件里配置</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token property">&quot;browserslist&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&gt; 0.25%, not dead&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="配置项介绍" tabindex="-1"><a class="header-anchor" href="#配置项介绍"><span>配置项介绍</span></a></h4><h5 id="targets" tabindex="-1"><a class="header-anchor" href="#targets"><span>targets</span></a></h5><p>解释:描述项目支持的目标环境, 类型: <code>string | Array&lt;string&gt; | { [string]: string }</code>, 默认 <code>{}</code>, 也可以是一个<code>browserslist-compatible</code>查询语句</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;targets&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&gt; 0.25%, not dead&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或者是一个描述支持的最小的环境版本的对象</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;targets&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;chrome&quot;</span><span class="token operator">:</span> <span class="token string">&quot;58&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;ie&quot;</span><span class="token operator">:</span> <span class="token string">&quot;11&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>环境如: <code>chrome</code>, <code>opera</code>, <code>edge</code>, <code>firefox</code>, <code>safari</code>, <code>ie</code>, <code>ios</code>, <code>android</code>, <code>node</code>, <code>electron</code></p><p>注意, 如果不指定<code>targets</code>, <code>@babel/prest-env</code>会假设您的目标是最老的浏览器,然后会将说有es2015+代码装换为es5兼容,这个预设不会想browserslist,如果没有设置目标的时候,不会使用默认查询,只有设置&#39;defaults&#39;,才会按照默认执行</p><p><strong><code>targets.esmodules</code></strong></p><p>类型: boolean</p><p>如果代码运行的浏览器支持es modules,并且设置为true的时候,browers将被忽略,可以配合<code>&lt;script type=&#39;module&#39;&gt;&lt;/script&gt;</code>专门为用户提供更小体积的代码文件</p><p><strong><code>targets.node</code></strong></p><p>类型: <code>string | &quot;current&quot; | true</code></p><p>如果编译针对当前node版本,可以指定node配置项,如果指定current,等同于<code>node: process.version.node</code></p><p><strong><code>targets.safari</code></strong></p><p>类型: <code>string | &quot;tp&quot;</code></p><p>如果针对<code>Safari</code>浏览器的技术预览版[<code>technology preview</code>]版本去编译, 可以指定<code>&quot;safari&quot;: &quot;tp&quot;</code></p><p><strong><code>targets.browsers</code></strong></p><p>类型: <code>string | Array&lt;string&gt;</code></p><p>browserlist查询选项</p><h5 id="spec" tabindex="-1"><a class="header-anchor" href="#spec"><span><code>spec</code></span></a></h5><p>类型: boolean, 默认: false</p><p>为一些允许的但是潜在的会比较慢的插件或者预设做配置</p><h5 id="loose" tabindex="-1"><a class="header-anchor" href="#loose"><span><code>loose</code></span></a></h5><p>类型: boolean, 默认: false</p><p>loose模式,生成的代码可能很快,对老的引擎有更好的兼容性,代码通常更简洁,更加的&#39;es5&#39;化,缺点就是es6转译到原生的es6会出现问题</p><p>源代码:</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Point</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x
    <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> y
  <span class="token punctuation">}</span>

  <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>x<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>y<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)</span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>不开启loose模式转译:</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">//.......省略3856行代码</span>
<span class="token keyword">var</span> Point <span class="token operator">=</span> <span class="token comment">/*#__PURE__*/</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">function</span> <span class="token function">Point</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__<span class="token punctuation">[</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> Point<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> y<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__<span class="token punctuation">[</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">(</span>Point<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&quot;toString&quot;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">value</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> _context<span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token function">_babel_runtime_corejs3_core_js_stable_instance_concat__WEBPACK_IMPORTED_MODULE_2___default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>_context <span class="token operator">=</span> <span class="token string">&quot;(&quot;</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>x<span class="token punctuation">,</span> <span class="token string">&quot;, &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>_context<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y<span class="token punctuation">,</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> Point<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// ....</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>开启loose模式转译:</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/******/</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">// webpackBootstrap</span>
<span class="token keyword">var</span> __webpack_exports__ <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> Point <span class="token operator">=</span> <span class="token comment">/*#__PURE__*/</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">function</span> <span class="token function">Point</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> y<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">var</span> _proto <span class="token operator">=</span> <span class="token class-name">Point</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
  _proto<span class="token punctuation">.</span><span class="token function-variable function">toString</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;(&quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token string">&quot;, &quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">+</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> Point<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
window<span class="token punctuation">.</span>zFn <span class="token operator">=</span> __webpack_exports__<span class="token punctuation">;</span>
<span class="token doc-comment comment">/******/</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="modules" tabindex="-1"><a class="header-anchor" href="#modules"><span><code>modules</code></span></a></h5><p>类型: <code>&quot;amd&quot; | &quot;umd&quot; | &quot;systemjs&quot; | &quot;commonjs&quot; | &quot;cjs&quot; | &quot;auto&quot; | false</code>, 默认为 <code>&quot;auto&quot;</code></p><p>允许转换<code>ES6</code>模块语法为其他的模块类型,设置为<code>false</code>将不会转换模块</p><h5 id="debug" tabindex="-1"><a class="header-anchor" href="#debug"><span><code>debug</code></span></a></h5><p>类型: boolean, 默认: false</p><p><code>console.log</code>输出编译目标或者使用的插件在[<code>plugin data version</code>]中指定的版本</p><h5 id="include" tabindex="-1"><a class="header-anchor" href="#include"><span><code>include</code></span></a></h5><p>类型: <code>Array&lt;string|RegExp&gt;</code>, 默认: []</p><p>包含某些插件</p><h5 id="exclude" tabindex="-1"><a class="header-anchor" href="#exclude"><span><code>exclude</code></span></a></h5><p>类型: <code>Array&lt;string|RegExp&gt;</code>, 默认: []</p><p>排除某些插件</p><h5 id="usebuildtins" tabindex="-1"><a class="header-anchor" href="#usebuildtins"><span><code>useBuildtIns</code></span></a></h5><p>类型: <code>&quot;usage&quot; | &quot;entry&quot; | false</code>, 默认<code>false</code></p><p>配置非false使用, 因为<code>@babel/polyfill</code>在<code>Babel 7.4.0</code>已被废弃,我们推荐直接添加<code>core-js</code>和通过[<code>corejs</code>]选项设置版本</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> core-js@3 <span class="token parameter variable">--save</span>
<span class="token comment"># or</span>
<span class="token function">npm</span> <span class="token function">install</span> core-js@2 <span class="token parameter variable">--save</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>useBuiltIns: &#39;entry&#39;</code></p><blockquote><p>整个app里只能使用一次<code>import &#39;core-js&#39;</code>和<code>import &#39;regenerator-runtime/runtime&#39;</code>,推荐创建一个只包含<code>import</code>声明的单入口文件</p></blockquote><p>当需要根据不同的基于环境的入口需要引入不同的<code>core-js</code>时, 这个选项允许一个新的插件来替换<code>import &quot;core-js/stable&quot;</code>和<code>import &quot;regenerator-runtime/runtime&quot;</code>声明(或者<code>require(&quot;corejs&quot;)</code>和<code>require(&quot;regenerator-runtime/runtime&quot;)</code>)</p><p>in</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token string">&#39;core-js&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>out(基于不同的环境)</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token string">&quot;core-js/modules/es.string.pad-start&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string">&quot;core-js/modules/es.string.pad-end&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>引入<code>&quot;core-js&quot;</code>加载了对于每一个可能的<code>ECMAScript</code>特性的语法填充, 如果你知道你只需要他们其中的某一部分呢, 当使用<code>core-js@3</code>和<code>@babel/preset-env</code>, 能够对每一个<code>core-js</code>入口和其依赖的优化. 比如, 你看值需要填充数组方法和新的<code>Math</code>提案:</p><h4 id="in" tabindex="-1"><a class="header-anchor" href="#in"><span>in</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token string">&quot;core-js/es/array&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string">&quot;core-js/proposals/math-extensions&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>out</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token string">&quot;core-js/modules/es.array.unscopables.flat&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string">&quot;core-js/modules/es.array.unscopables.flat-map&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string">&quot;core-js/modules/esnext.math.clamp&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string">&quot;core-js/modules/esnext.math.deg-per-rad&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string">&quot;core-js/modules/esnext.math.degrees&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string">&quot;core-js/modules/esnext.math.fscale&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string">&quot;core-js/modules/esnext.math.rad-per-deg&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string">&quot;core-js/modules/esnext.math.radians&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string">&quot;core-js/modules/esnext.math.scale&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你可以阅读[<code>core-js</code>]的文档获取关于不同入口的信息</p><blockquote><p>注意: 当使用<code>core-js@2</code>(使用<code>corejs: 2</code>配置项或者隐式使用), <code>@babel/preset-env</code>将也引入<code>@babel/polyfill</code>. 这种行为已被废弃, 因为不可能与<code>@babel/polyfill</code>使用不同的<code>core-js</code>版本</p></blockquote><p><code>useBuiltIns: &#39;usage&#39;</code></p><p>当文件里被使用时, 添加特定的引入来语法填充, 我们利用它, 一个打包的文件只会加载一次相同的语法填充</p><h4 id="in-1" tabindex="-1"><a class="header-anchor" href="#in-1"><span>In</span></a></h4><p>a.js</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>b.js</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="out-如果环境需要语法填充" tabindex="-1"><a class="header-anchor" href="#out-如果环境需要语法填充"><span>Out(如果环境需要语法填充)</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token string">&quot;core-js/modules/es.promise&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token string">&quot;core-js/modules/es.map&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="out-如果环境支持该语法" tabindex="-1"><a class="header-anchor" href="#out-如果环境支持该语法"><span>Out(如果环境支持该语法)</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>useBuiltIns: false</code></p><p>不在每一个文件自动添加语法填充, 不转换<code>import &quot;core-js&quot;</code>和<code>import &quot;@babel/polyfill&quot;</code>为单独的语法填充</p><p><code>corejs</code></p><p>数据结构: <code>2, 3</code> 或者 <code>{ version: 2 | 3, proposals: boolean }</code>, 默认为 <code>2</code></p><p>这个选项只会在与<code>useBuiltIns: usage</code>或者<code>useBuiltIns: entry</code>一起使用时才会生效, 确保<code>@babel/preset-env</code>为你的<code>core-js</code>版本注入了正确的引入</p><p>默认只有稳定的 <code>ECMAScript</code>特性的语法填充才被注入, 你有三种方式去做语法填充:</p><ul><li>当使用<code>useBuiltIns: &quot;entry&quot;</code>, 你可直接引入一个[<code>proposal polyfill</code>]: <code>import &quot;core-js/proposals/string-replace-all&quot;</code></li></ul><h2 id="babel-polyfill" tabindex="-1"><a class="header-anchor" href="#babel-polyfill"><span>babel-polyfill</span></a></h2><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2>`,102),r={href:"https://juejin.cn/post/7020741071067955214",target:"_blank",rel:"noopener noreferrer"},u={href:"https://juejin.cn/post/6845166891015602190",target:"_blank",rel:"noopener noreferrer"},k={href:"https://juejin.cn/post/6844903937900822536#heading-5",target:"_blank",rel:"noopener noreferrer"};function v(m,b){const n=o("ExternalLinkIcon");return p(),c("div",null,[d,s("p",null,[s("a",r,[a("babel的基本用法、按需polyfill"),e(n)])]),s("p",null,[s("a",u,[a("用了babel还需要polyfill吗？？？"),e(n)])]),s("p",null,[s("a",k,[a("[译]Babel文档之@babel/preset-env"),e(n)])])])}const j=t(i,[["render",v],["__file","babelyushehechajianjieshao.html.vue"]]),q=JSON.parse('{"path":"/jichu/gongju/babelyushehechajianjieshao.html","title":"babel预设和插件介绍","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"@babel/preset-env","slug":"babel-preset-env","link":"#babel-preset-env","children":[]},{"level":2,"title":"babel-polyfill","slug":"babel-polyfill","link":"#babel-polyfill","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1709263503000,"updatedTime":1709354699000,"contributors":[{"name":"zhuqi","email":"zhuqi","commits":4}]},"readingTime":{"minutes":5.48,"words":1644},"filePathRelative":"jichu/gongju/babelyushehechajianjieshao.md","localizedDate":"2024年3月1日"}');export{j as comp,q as data};
