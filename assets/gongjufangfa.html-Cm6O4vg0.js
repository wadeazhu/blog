import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,b as t}from"./app-D1MQ9M-Q.js";const e={},p=t(`<h2 id="判断是否是字符串" tabindex="-1"><a class="header-anchor" href="#判断是否是字符串"><span>判断是否是字符串</span></a></h2><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token keyword">function</span> <span class="token function">isString</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span><span class="token operator">:</span> value <span class="token keyword">is</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">typeof</span> value <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="cookie的操作" tabindex="-1"><a class="header-anchor" href="#cookie的操作"><span>cookie的操作</span></a></h2><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token comment">// 设置cookie的值</span>
<span class="token keyword">function</span> <span class="token function">setCookie</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> value<span class="token punctuation">,</span> hours <span class="token operator">=</span> <span class="token number">24</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> str <span class="token operator">=</span> name <span class="token operator">+</span> <span class="token string">&quot;=&quot;</span> <span class="token operator">+</span> value
    <span class="token comment">// toGMTString() 将时间转换成字符串</span>
    <span class="token keyword">const</span> time <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> hours <span class="token operator">*</span> <span class="token number">3600</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toGMTString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    str <span class="token operator">+=</span> <span class="token string">&#39;; expires=&#39;</span> <span class="token operator">+</span> time
    
    document<span class="token punctuation">.</span>cookie <span class="token operator">=</span> str
<span class="token punctuation">}</span>

<span class="token comment">// 获取cookie的值</span>
<span class="token keyword">function</span> <span class="token function">getCookie</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> arr<span class="token punctuation">,</span> reg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&quot;(^| )&quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&quot;=([^;]*)(;|$)&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>arr <span class="token operator">=</span> document<span class="token punctuation">.</span>cookie<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>reg<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">unescape</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="通过jsencrypt加密" tabindex="-1"><a class="header-anchor" href="#通过jsencrypt加密"><span>通过JSEncrypt加密</span></a></h2><h3 id="什么是rsa加密" tabindex="-1"><a class="header-anchor" href="#什么是rsa加密"><span>什么是RSA加密</span></a></h3><p>RSA加密算法是一种 非对称加密算法 ，RSA加密使用了&quot;一对&quot;密钥.分别是公钥和私钥,这个公钥和私钥其实就是一组数字!其二进制位长度可以是1024位或者2048位.长度越长其加密强度越大,目前为止公之于众的能破解的最大长度为768位密钥,只要高于768位,相对就比较安全.所以目前为止,这种加密算法一直被广泛使用.</p><h3 id="rsa加密与解密" tabindex="-1"><a class="header-anchor" href="#rsa加密与解密"><span>RSA加密与解密</span></a></h3><ul><li>使用 <strong>公钥</strong> 加密的数据,利用 <strong>私钥</strong> 进行解密</li><li>使用 <strong>私钥</strong> 加密的数据,利用 <strong>公钥</strong> 进行解密</li></ul><p>window可以使用git命令行工具</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ openssl genrsa <span class="token parameter variable">-out</span> private.pem <span class="token number">1024</span> <span class="token comment"># 生成私钥，密钥长度为1024bit</span>

$ openssl rsa <span class="token parameter variable">-in</span> private.pem <span class="token parameter variable">-pubout</span> <span class="token parameter variable">-out</span> public.pem <span class="token comment"># 从私钥中提取公钥</span>

<span class="token comment"># 这样就生成了private.pem 和 public.pem两个文件，可以利用终端进行查看</span>

$ <span class="token function">cat</span> private.pem <span class="token comment"># 查看私钥</span>

$ <span class="token function">cat</span> public.pem <span class="token comment"># 查看公钥</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>安装jsencrypt，并引入</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> i jsencrypt

<span class="token function">import</span> JSEncrypt from <span class="token string">&#39;jsencrypt&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token comment">// 加密</span>
<span class="token keyword">function</span> <span class="token function">encryptPassword</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> timestamp <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> jse <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JSEnctypt</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    jse<span class="token punctuation">.</span><span class="token function">setPublicKey</span><span class="token punctuation">(</span>公钥<span class="token punctuation">)</span>
    <span class="token keyword">const</span> _date <span class="token operator">=</span> <span class="token punctuation">(</span>timestamp <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> pwdStr <span class="token operator">=</span> password <span class="token operator">+</span> <span class="token string">&#39; &#39;</span> <span class="token operator">+</span> _date
    <span class="token keyword">const</span> pwd <span class="token operator">=</span> jse<span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span>pwdStr<span class="token punctuation">)</span> 
    <span class="token keyword">return</span> pwd
<span class="token punctuation">}</span>

<span class="token comment">// 解密</span>
<span class="token keyword">function</span> <span class="token function">decryptPwd</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> jse <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JSEnctypt</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    jse<span class="token punctuation">.</span><span class="token function">setPrivateKey</span><span class="token punctuation">(</span>私钥<span class="token punctuation">)</span>
    <span class="token keyword">return</span> jse<span class="token punctuation">.</span><span class="token function">decrypt</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="通过aes加密-加密模式为cbc" tabindex="-1"><a class="header-anchor" href="#通过aes加密-加密模式为cbc"><span>通过AES加密, 加密模式为CBC</span></a></h2><p>安装并引入:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> i <span class="token parameter variable">-S</span> crypto-js 

<span class="token function">import</span> CryptoJs from <span class="token string">&#39;crypto-js&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token constant">AES_KEY</span> <span class="token operator">=</span> <span class="token string">&#39;xxxxx&#39;</span>
<span class="token keyword">const</span> <span class="token constant">IV</span> <span class="token operator">=</span> <span class="token string">&#39;xxxx&#39;</span>
<span class="token keyword">const</span> word <span class="token operator">=</span> <span class="token string">&#39;需要加密的文字&#39;</span>

<span class="token keyword">const</span> key <span class="token operator">=</span> CryptoJs<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">AES_KEY</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> iv <span class="token operator">=</span> CryptoJs<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">IV</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> srcs <span class="token operator">=</span> CryptoJs<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span>

<span class="token keyword">const</span> encrypted <span class="token operator">=</span> CryptoJs<span class="token punctuation">.</span><span class="token constant">AES</span><span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span>srcs<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    iv<span class="token punctuation">,</span>
    <span class="token literal-property property">mode</span><span class="token operator">:</span> CryptoJs<span class="token punctuation">.</span>mode<span class="token punctuation">.</span><span class="token constant">CBC</span><span class="token punctuation">,</span>
    <span class="token literal-property property">padding</span><span class="token operator">:</span> CryptoJs<span class="token punctuation">.</span>pad<span class="token punctuation">.</span>Pkcs7
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 返回字符串</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>encrypted<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// 转换成base64</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>CryptoJs<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Base64<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>CryptoJs<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>encrypted<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),o=[p];function c(l,i){return s(),a("div",null,o)}const k=n(e,[["render",c],["__file","gongjufangfa.html.vue"]]),d=JSON.parse('{"path":"/xiangmu/houtaiguanli/gongjufangfa.html","title":"项目中的工具方法","lang":"zh-CN","frontmatter":{"title":"项目中的工具方法","icon":"fab fa-markdown","footer":false},"headers":[{"level":2,"title":"判断是否是字符串","slug":"判断是否是字符串","link":"#判断是否是字符串","children":[]},{"level":2,"title":"cookie的操作","slug":"cookie的操作","link":"#cookie的操作","children":[]},{"level":2,"title":"通过JSEncrypt加密","slug":"通过jsencrypt加密","link":"#通过jsencrypt加密","children":[{"level":3,"title":"什么是RSA加密","slug":"什么是rsa加密","link":"#什么是rsa加密","children":[]},{"level":3,"title":"RSA加密与解密","slug":"rsa加密与解密","link":"#rsa加密与解密","children":[]}]},{"level":2,"title":"通过AES加密, 加密模式为CBC","slug":"通过aes加密-加密模式为cbc","link":"#通过aes加密-加密模式为cbc","children":[]}],"git":{"createdTime":1709263503000,"updatedTime":1709354699000,"contributors":[{"name":"zhuqi","email":"zhuqi","commits":4}]},"readingTime":{"minutes":1.74,"words":521},"filePathRelative":"xiangmu/houtaiguanli/gongjufangfa.md","localizedDate":"2024年3月1日"}');export{k as comp,d as data};
