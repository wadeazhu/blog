import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,b as t}from"./app-D1MQ9M-Q.js";const p={},o=t(`<h1 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h1><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token comment">// types</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> Method<span class="token punctuation">,</span> AxiosReqeustHeaders <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">enum</span> responseCodeEnum <span class="token punctuation">{</span>
    <span class="token constant">SUCCESS</span> <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token comment">// 成功</span>
    decorationSUCCESS <span class="token operator">=</span> <span class="token number">200</span>， <span class="token comment">// 店铺装修成功请求</span>
    <span class="token constant">UNAUTHENTICATED</span> <span class="token operator">=</span> <span class="token number">8302</span> <span class="token comment">// token 过期或者未登录等。</span>
    <span class="token comment">// 暂定其他的为失败</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">optionsType</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    method<span class="token operator">?</span><span class="token operator">:</span> Method<span class="token punctuation">;</span>
    data<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
    params<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
    isFormData<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
    headers<span class="token operator">?</span><span class="token operator">:</span> AxiosRequestHeaders<span class="token punctuation">;</span>
    responseType<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> axios<span class="token punctuation">,</span> <span class="token punctuation">{</span> AxiosResponse<span class="token punctuation">,</span> AxiosRequestConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> message <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;ant-design-vue&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> responseCodeEnum<span class="token punctuation">,</span> optionsType<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;types&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> BasicResult <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;basicTypes&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useUserInfo <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/store/userInfo&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> handleLogout <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/store/logout&#39;</span>

<span class="token comment">// object对象存放每次new CancelToken生成的方法</span>
<span class="token keyword">const</span> source<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">// 每次请求前都会把path放在此数组中，响应成功后清除此请求path</span>
<span class="token keyword">let</span> requestList<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

<span class="token keyword">const</span> instance <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    baseURL<span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    timeout<span class="token operator">:</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">50</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 对象转换formData格式</span>
<span class="token keyword">function</span> <span class="token function">object2FormData</span><span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> FormData<span class="token punctuation">{</span>
    <span class="token keyword">const</span> formData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> k <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        formData<span class="token punctuation">.</span><span class="token function">qppend</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> obj<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> formData<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

instance<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span>config<span class="token operator">:</span> AxiosRequestConfig<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> userStore <span class="token operator">=</span> <span class="token function">useUserInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> _info <span class="token operator">=</span> userStore<span class="token punctuation">.</span><span class="token function">getUserInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>_info <span class="token operator">&amp;&amp;</span> _info<span class="token punctuation">.</span>token<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      config<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;Tenant-Id&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> _info<span class="token punctuation">.</span>tenantId
      config<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;Source&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;manager&#39;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> config
<span class="token punctuation">}</span><span class="token punctuation">)</span>

intance<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>
	<span class="token punctuation">(</span>response<span class="token operator">:</span> AxiosResponse<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// 获取请求的api</span>
        <span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>config<span class="token punctuation">.</span>url<span class="token punctuation">)</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>config<span class="token punctuation">.</span>responseType <span class="token operator">===</span> <span class="token string">&#39;blob&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        
        <span class="token comment">// 请求完成后，将此请求从请求列表中移除</span>
        requestList <span class="token operator">=</span> requestList<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span>path<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">const</span> statusCode <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>code<span class="token punctuation">)</span>
        
		<span class="token comment">// 成功</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>
            statusCode <span class="token operator">===</span> responseCodeEnum<span class="token punctuation">.</span><span class="token constant">SUCCESS</span> <span class="token operator">||</span>
            statusCode <span class="token operator">===</span> resoponseCodeEnum<span class="token punctuation">.</span>decorationSUCCESS
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span>
            <span class="token comment">// 登录失败</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>statusCode <span class="token operator">===</span> responseCodeEnum<span class="token punctuation">.</span><span class="token constant">UNAUTHENTICATED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;登录过期，请重新登录&#39;</span><span class="token punctuation">)</span>
            <span class="token function">handleLogout</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span>
            <span class="token comment">// 其他</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>message <span class="token operator">||</span> response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>msg<span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    error <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>message <span class="token operator">||</span> error<span class="token punctuation">.</span>response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>msg<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">request</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>options<span class="token operator">:</span> optionsType<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>BasicResult<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span> <span class="token punctuation">{</span>
    requestList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>url<span class="token punctuation">)</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>options<span class="token punctuation">.</span>method<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        options<span class="token punctuation">.</span>method <span class="token operator">=</span> <span class="token string">&quot;GET&quot;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> formatData<span class="token operator">:</span> FormData <span class="token operator">|</span> Object <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;PUT&quot;</span><span class="token punctuation">,</span> <span class="token string">&#39;DELETE&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>method<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// get/put/delete请求参数</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>params<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            formatData <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>options<span class="token punctuation">.</span>params <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 格式化formData</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>isFormData<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            formatData <span class="token operator">=</span> <span class="token function">object2FormData</span><span class="token punctuation">(</span>formatData<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        
        <span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> instance<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">request</span><span class="token generic class-name"><span class="token operator">&lt;</span>BasicResult<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            url<span class="token operator">:</span> options<span class="token punctuation">.</span>url<span class="token punctuation">,</span>
            method<span class="token operator">:</span> options<span class="token punctuation">.</span>method<span class="token punctuation">,</span>
            params<span class="token operator">:</span> formData<span class="token punctuation">,</span>
            cancelToken<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">axios</span><span class="token punctuation">.</span><span class="token function">CancelToken</span><span class="token punctuation">(</span>c <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                source<span class="token punctuation">[</span>options<span class="token punctuation">.</span>url<span class="token punctuation">]</span> <span class="token operator">=</span> c
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> data
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// post请求参数</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            formatData <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>options<span class="token punctuation">.</span>data <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>isDefaultData<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            formatData <span class="token operator">=</span> options<span class="token punctuation">.</span>data
        <span class="token punctuation">}</span>
        
        <span class="token comment">// 格式化formData</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>isFormData<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            formatData <span class="token operator">=</span> <span class="token function">object2FormData</span><span class="token punctuation">(</span>formatData<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> instance<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">request</span><span class="token generic class-name"><span class="token operator">&lt;</span>BasicResult<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            url<span class="token operator">:</span> options<span class="token punctuation">.</span>url<span class="token punctuation">,</span>
            method<span class="token operator">:</span> options<span class="token punctuation">.</span>method<span class="token punctuation">,</span>
            data<span class="token operator">:</span> formatData<span class="token punctuation">,</span>
            responseType<span class="token operator">:</span> options<span class="token punctuation">.</span>resopnseType <span class="token operator">||</span> <span class="token string">&#39;json&#39;</span><span class="token punctuation">,</span>
            cancelToken<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">axios</span><span class="token punctuation">.</span><span class="token function">CancelToken</span><span class="token punctuation">(</span>c <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                source<span class="token punctuation">[</span>options<span class="token punctuation">.</span>url<span class="token punctuation">]</span> <span class="token operator">=</span> c
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> data
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

request<span class="token punctuation">.</span><span class="token function-variable function">get</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>options<span class="token operator">:</span> optionsType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    options<span class="token punctuation">.</span>method <span class="token operator">=</span> <span class="token string">&#39;GET&#39;</span>
    <span class="token keyword">return</span> <span class="token function">request</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

request<span class="token punctuation">.</span><span class="token function-variable function">post</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>options<span class="token operator">:</span> optionsType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    options<span class="token punctuation">.</span>method <span class="token operator">=</span> <span class="token string">&#39;POST&#39;</span>
    <span class="token keyword">return</span> <span class="token function">request</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

request<span class="token punctuation">.</span><span class="token function-variable function">put</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>options<span class="token operator">:</span> optionsType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    options<span class="token punctuation">.</span>method <span class="token operator">=</span> <span class="token string">&#39;PUT&#39;</span>
    <span class="token keyword">return</span> <span class="token function">request</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

request<span class="token punctuation">.</span><span class="token function-variable function">delete</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>options<span class="token operator">:</span> optionsType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    options<span class="token punctuation">.</span>method <span class="token operator">=</span> <span class="token string">&#39;DELETE&#39;</span>
    <span class="token keyword">return</span> <span class="token function">request</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> request
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>退出的函数</p><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">&#39;@/router/index&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useUserInfo <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/store/useUserInfo&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> usePermission <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/store/usePermission&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useMenu <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/store/useMenu&#39;</span>
<span class="token keyword">const</span> baseNameList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;login&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;index&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;home&#39;</span><span class="token punctuation">]</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">handleLogout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    router<span class="token punctuation">.</span><span class="token function">getRoutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>route <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>baseNameList<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>route<span class="token punctuation">.</span>name <span class="token keyword">as</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>router<span class="token punctuation">.</span><span class="token function">hasRoute</span><span class="token punctuation">(</span>route<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                router<span class="token punctuation">.</span><span class="token function">removeRoute</span><span class="token punctuation">(</span>route<span class="token punctuation">.</span>name<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    
    <span class="token keyword">const</span> permissionStore <span class="token operator">=</span> <span class="token function">usePermission</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> userInfoStore <span class="token operator">=</span> <span class="token function">useUserInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> menu <span class="token operator">=</span> <span class="token function">useMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    
    permissionStore<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    userInfoStore<span class="token punctuation">.</span><span class="token function">clearUserInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    menu<span class="token punctuation">.</span><span class="token function">clearKeys</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;/login&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),e=[o];function c(i,l){return s(),a("div",null,e)}const k=n(p,[["render",c],["__file","5.fengzhuangtongyongqingqiu.html.vue"]]),d=JSON.parse('{"path":"/xiangmu/houtaiguanli/5.fengzhuangtongyongqingqiu.html","title":"封装通用请求","lang":"zh-CN","frontmatter":{"title":"封装通用请求","icon":"fab fa-markdown","order":5,"footer":false},"headers":[],"git":{"createdTime":1709263503000,"updatedTime":1709354699000,"contributors":[{"name":"zhuqi","email":"zhuqi","commits":4}]},"readingTime":{"minutes":1.75,"words":524},"filePathRelative":"xiangmu/houtaiguanli/5.fengzhuangtongyongqingqiu.md","localizedDate":"2024年3月1日"}');export{k as comp,d as data};
